/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]


    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'SAMTOOLS_FAIDX' {
        ext.when = { !params.fasta_fai }
        publishDir = [
            path: { "${params.outdir}/ref" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'GATK4_CREATESEQUENCEDICTIONARY' {
        ext.when = { !params.fasta_dict }
        publishDir = [
            path: { "${params.outdir}/ref" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'BWA_INDEX' {
        ext.when = { !params.bwa_index }
        publishDir = [
            path: { "${params.outdir}/ref" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'FASTP' {
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> (filename.endsWith('.gz') || filename.equals('versions.yml')) ? null : filename }
        ]
    }

    withName: 'SEQKIT_SPLIT2' {
        ext.args = [
            "--by-size ${params.split_fastq}",
            "--extension .gz"
        ].join(' ').trim()
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { null }
        ]
    }

    withName: 'BWA_MEM' {
        ext.args   = { "-K 100000000 -Y" }
        ext.prefix = { "${meta.id}_${meta.split}" }
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { null }
        ]
    }

    withName: 'SAMTOOLS_MERGE_SPLITS|SAMTOOLS_MERGE_LANES|SAMTOOLS_INDEX' {
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { null }
        ]
    }

    withName: 'GATK4_ADDORREPLACEREADGROUPS' {
        ext.args   = { "--RGID ${meta.id} --RGLB ${meta.sample} --RGPL ILLUMINA --RGPU ${meta.id} --RGSM ${meta.sample}" }
        ext.prefix = { "${meta.id}.addrg" }
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { null }
        ]
    }

    withName: 'BIOBAMBAM_BAMSORMADUP' {
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> (filename.endsWith('.bam') || filename.equals('versions.yml')) ? null : filename }
        ]
    }

    withName: 'MOSDEPTH' {
        publishDir = [
            path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> (filename.endsWith('.bed.gz') || filename.endsWith('.bed.gz.csi') || filename.equals('versions.yml')) ? null : filename }
        ]
    }

    withName: 'GATK4_HAPLOTYPECALLER' {
        ext.args  = { "-ERC GVCF" }
    }

}
